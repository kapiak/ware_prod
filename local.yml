version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: assistant_local_django
    container_name: django
    depends_on:
      - postgres
      - mailhog
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: assistant_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  # docs:
  #   image: assistant_local_docs
  #   container_name: docs
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/docs/Dockerfile
  #   env_file:
  #     - ./.envs/.local/.django
  #     - ./.envs/.local/.postgres
  #   volumes:
  #     - ./docs:/docs
  #     - ./config:/app/config
  #     - ./assistant:/app/assistant
  #   ports:
  #     - "7000:7000"

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    ports:
      - "8025:8025"

  redis:
    image: redis:5.0
    container_name: redis

  broker:
    image: rabbitmq:latest
    hostname: broker
    environment:
      - RABBITMQ_DEFAULT_USER=debug
      - RABBITMQ_DEFAULT_PASS=debug
    ports:
      - "5672:5672"
      - "15672:15672"

  celeryworker:
    <<: *django
    image: assistant_local_celeryworker
    container_name: celeryworker
    depends_on:
      - broker
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: assistant_local_celerybeat
    container_name: celerybeat
    depends_on:
      - broker
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: assistant_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower
